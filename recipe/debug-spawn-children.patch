diff --git a/src/con_duct/__main__.py b/src/con_duct/__main__.py
index 1926a9e..8e9051c 100755
--- a/src/con_duct/__main__.py
+++ b/src/con_duct/__main__.py
@@ -489,7 +489,8 @@ class Report:
                         ),
                     )
         except subprocess.CalledProcessError as exc:  # when session_id has no processes
-            lgr.debug("Error collecting sample: %s", str(exc))
+            import traceback
+            traceback.print_exc(file=sys.stderr)
             return None
 
         sample.averages = Averages.from_sample(sample)
diff --git a/test/test_e2e.py b/test/test_e2e.py
index d222135..256c14f 100644
--- a/test/test_e2e.py
+++ b/test/test_e2e.py
@@ -3,6 +3,7 @@ import json
 from pathlib import Path
 import subprocess
 import pytest
+import sys
 
 TEST_SCRIPT_DIR = Path(__file__).with_name("data")
 
@@ -32,7 +33,13 @@ def test_spawn_children(temp_output_dir: str, mode: str, num_children: int) -> N
         if proc["cmd"].startswith("sleep")
     )
     # Add one pid for the hold-the-door process, see spawn_children.sh line 7
-    if mode == "setsid":
-        assert len(all_child_pids) == 1
-    else:
-        assert len(all_child_pids) == num_children + 1
+    try:
+        if mode == "setsid":
+            assert len(all_child_pids) == 1
+        else:
+            assert len(all_child_pids) == num_children + 1
+    except AssertionError:
+        print("ALL CHILD PIDS TEST FAILED")
+        print(f"Command was: {command}", file=sys.stderr)
+        print(f"All Samples: {all_samples}", file=sys.stderr)
+        raise
